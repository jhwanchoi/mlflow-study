[tool.poetry]
name = "mlflow-vision-training"
version = "0.1.0"
description = "MLflow-based vision model training system for production ML pipelines"
authors = ["Jihwan Choi <jihwan@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.14"  # Flexible for local dev, Docker uses 3.11
torch = "^2.1.0"  # PyTorch for model training
torchvision = "^0.16.0"  # Vision datasets and models
numpy = "^1.24.0"  # Required by PyTorch and data processing
mlflow = "^2.10.0"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
scikit-learn = "^1.3.0"
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
pillow = "^10.1.0"
tqdm = "^4.66.0"
boto3 = "^1.34.0"  # For S3-compatible MinIO
psycopg2-binary = "^2.9.9"  # PostgreSQL driver

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
isort = "^5.13.0"
ipython = "^8.18.0"
jupyter = "^1.0.0"
pre-commit = "^3.6.0"
bandit = {extras = ["toml"], version = "^1.7.6"}

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=html"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mlflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "mlflow.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mlflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - "mlflow"
          - "server"
          - "--host"
          - "{{ .Values.mlflow.host }}"
          - "--port"
          - "{{ .Values.mlflow.port }}"
          - "--backend-store-uri"
          {{- if .Values.databaseSecret.enabled }}
          - "postgresql://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)"
          {{- else }}
          - "{{ .Values.mlflow.backendStoreUri }}"
          {{- end }}
          {{- if .Values.mlflow.artifactRoot }}
          - "--default-artifact-root"
          - "{{ .Values.mlflow.artifactRoot }}"
          {{- end }}
          {{- if .Values.mlflow.workers }}
          - "--workers"
          - "{{ .Values.mlflow.workers }}"
          {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.mlflow.port }}
          protocol: TCP
        env:
        - name: AWS_REGION
          value: "{{ .Values.awsRegion }}"
        - name: MLFLOW_LOGGING_LEVEL
          value: "{{ .Values.logging.level }}"
        {{- if .Values.databaseSecret.enabled }}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databaseSecret.secretName }}
              key: {{ .Values.databaseSecret.usernameKey }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databaseSecret.secretName }}
              key: {{ .Values.databaseSecret.passwordKey }}
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databaseSecret.secretName }}
              key: {{ .Values.databaseSecret.hostKey }}
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databaseSecret.secretName }}
              key: {{ .Values.databaseSecret.portKey }}
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databaseSecret.secretName }}
              key: {{ .Values.databaseSecret.databaseKey }}
        {{- end }}
        {{- if .Values.mlflow.authentication.enabled }}
        - name: MLFLOW_AUTH_CONFIG_PATH
          value: "/etc/mlflow/auth-config.ini"
        {{- end }}
        {{- with .Values.mlflow.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe.httpGet | nindent 10 }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe.httpGet | nindent 10 }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        {{- if .Values.mlflow.authentication.enabled }}
        - name: auth-config
          mountPath: /etc/mlflow
          readOnly: true
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: mlflow-data
          mountPath: /mlflow
        {{- end }}
      volumes:
      {{- if .Values.mlflow.authentication.enabled }}
      - name: auth-config
        configMap:
          name: {{ include "mlflow.fullname" . }}-auth-config
      {{- end }}
      {{- if .Values.persistence.enabled }}
      - name: mlflow-data
        persistentVolumeClaim:
          claimName: {{ include "mlflow.fullname" . }}-pvc
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
